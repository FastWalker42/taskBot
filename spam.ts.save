import CONFIG from './CONFIG.json'
import { Bot, InlineKeyboard } from 'grammy'
import { parseMode } from '@grammyjs/parse-mode'
import * as fs from 'fs'

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Bot(CONFIG.BOT_TOKEN_PROD)
bot.api.config.use(parseMode('HTML'))

// –ß–∏—Ç–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º —Ñ–∞–π–ª
const file = fs.readFileSync('./ids.txt', 'utf-8')
const ids = file
  .split(/\s+/)
  .filter(Boolean)
  .map((id) => Number(id))

console.log(`Total IDs: ${ids.length}`)

const CAPTION = 
const CHUNK_SIZE = 20 // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

function chunk<T>(arr: T[], size: number): T[][] {
  const res = []
  for (let i = 0; i < arr.length; i += size) {
    res.push(arr.slice(i, i + size))
  }
  return res
}

async function sendChunk(chunk: number[]) {
  const results = await Promise.allSettled(
    chunk.map((id) =>
      bot.api.sendMessage(id, CAPTION, {
        reply_markup: new InlineKeyboard().url(
          'üîÑ –ø–æ–∫—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É',
          'https://t.me/dropster_robot?start=urlp16'
        ),
        link_preview_options: { is_disabled: true },
      })
    )
  )

  results.forEach((result, i) => {
    const id = chunk[i]
    if (result.status === 'fulfilled') {
      console.log(`‚úÖ Sent to ${id}`)
    } else {
      console.error(`‚ùå Failed for ${id}:`, result.reason.message)
    }
  })

  return results.filter((r) => r.status === 'fulfilled').length
}

async function sendMessages() {
  let success = 0
  const chunks = chunk(ids, CHUNK_SIZE)

  for (const c of chunks) {
    const count = await sendChunk(c)
    success += count
    console.log(`‚úÖ Chunk done. Total success: ${success}`)
    bot.api.sendMessage(
      6273715396,
      `‚úÖ Chunk done. Total success: ${success}`
    )

    await new Promise((r) => setTimeout(r, 1000)) // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å Flood
  }

  console.log(`‚úÖ Done. Total successful sends: ${success}`)
  bot.api.sendMessage(
    6273715396,
    `‚úÖ Done. Total successful sends: ${success}`
  )
}

sendMessages()
