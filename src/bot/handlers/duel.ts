import { Context, InlineKeyboard } from 'grammy'
import { IMAGES } from '../../../CONFIG.json'
import parseCallBack from '../utils/parseCallBack'
import { getDuelData } from '../../db/methods'

export default async (ctx: Context) => {
  const duelBet = parseCallBack(ctx.callbackQuery?.data!).data
  const userId = ctx.from?.id

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥—É—ç–ª–∏
  let inDuelSearch = false
  let currentBet = 0
  if (userId) {
    const duelData = await getDuelData(userId)
    inDuelSearch = duelData.inProgress
    currentBet = duelData.betAmount
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –ø–æ–∏—Å–∫–µ –¥—É—ç–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–Ω–∏-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  if (inDuelSearch) {
    const keyboard = new InlineKeyboard()
      .text('‚ùå –û–¢–ú–ï–ù–ò–¢–¨ –ü–û–ò–°–ö', 'cancelDuel')
      .row()
      .text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üì≤', 'main_menu')

    await ctx.replyWithPhoto(IMAGES.DUEL, {
      caption: `<b>üéØ –í–´ –£–ñ–ï –ò–©–ï–¢–ï –°–û–ü–ï–†–ù–ò–ö–ê!</b>
<blockquote>üïí –°—Ç–∞–≤–∫–∞: <b>${currentBet}‚≠êÔ∏è</b>
‚åõ –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞...

‚ùå –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
</blockquote>`,
      reply_markup: keyboard,
    })
    return
  }

  // –û–±—ã—á–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–≤–∫–∏
  const bets = [1, 5, 10]
  const keyboard = new InlineKeyboard()

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  keyboard.text('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É:', 'duel').row()

  // –ö–Ω–æ–ø–∫–∏ —Å—Ç–∞–≤–æ–∫
  for (let i = 0; i < bets.length; i += 3) {
    const row = bets.slice(i, i + 3)
    row.forEach((bet) => {
      const isSelected = String(bet) === duelBet
      const label = `‚≠êÔ∏è${bet}${isSelected ? ' ‚úÖ' : ''}`
      keyboard.text(label, `duel-${bet}`)
    })
    keyboard.row()
  }

  // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
  if (duelBet) {
    keyboard.text('üß® –ò–°–ö–ê–¢–¨ –°–û–ü–ï–†–ù–ò–ö–ê', `goDuel-${duelBet}`)
  } else {
    keyboard.text('üî∏ –í–´–ë–ï–†–ò–¢–ï –°–¢–ê–í–ö–£ üî∏', 'duel')
  }

  // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
  keyboard.row().text('–ù–∞–∑–∞–¥ üì≤', 'main_menu')

  await ctx.replyWithPhoto(IMAGES.DUEL, {
    caption: `<b>üéØ –î–£–≠–õ–¨</b>
<blockquote>ü§ë –í—ã–±–∏—Ä–∞–µ—à—å —Å—Ç–∞–≤–∫—É ‚Äî <b>–∏—â–µ—à—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞</b> ‚≠ê

üî´ –û–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–±–∏—Ä–∞–µ—Ç —Å—Ç–∞–≤–∫—É —Å–æ–ø–µ—Ä–Ω–∏–∫–∞, –¥—Ä—É–≥–æ–π ‚Äî <b>–ù–ò–ß–ï–ì–û</b> üòà

üî∞ –í—ã –∏–º–µ–µ—Ç–µ —Ä–∞–≤–Ω—ã–µ —à–∞–Ω—Å—ã –ø–æ–±–µ–¥–∏—Ç—å, 50 –Ω–∞ 50.
</blockquote>
`,
    reply_markup: keyboard,
  })
}
