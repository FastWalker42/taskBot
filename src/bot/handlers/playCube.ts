import { Context, InlineKeyboard } from 'grammy'
import { IMAGES } from '../../../CONFIG.json'
import {
  updateBalanceByUserId,
  getBalanceByUserId,
} from '../../db/methods'

const BET_AMOUNT = 5 // –°—Ç–∞–≤–∫–∞ 5‚≠êÔ∏è

export default async (ctx: Context) => {
  const userId = ctx.from?.id
  if (!userId) return

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const currentBalance = await getBalanceByUserId(userId)
  if (currentBalance === null) {
    await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞')
    return
  }

  if (currentBalance < BET_AMOUNT) {
    // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    await ctx.replyWithPhoto(IMAGES.CUBEGAME, {
      caption: `‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ ${BET_AMOUNT}‚≠êÔ∏è\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${currentBalance}‚≠êÔ∏è`,
      reply_markup: new InlineKeyboard()
        .text('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üí∞', 'topup_balance')
        .text('–ù–∞–∑–∞–¥ üì≤', 'main_menu'),
      message_effect_id: '5104841245755180586',
    })
    return
  }

  // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
  const newBalance = await updateBalanceByUserId(userId, -BET_AMOUNT)
  if (newBalance === null) {
    await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤')
    return
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫—É–±–∏–∫–∞
  const diceMessage = await ctx.replyWithDice('üé≤')

  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ (1-6)
  const diceResult = diceMessage.dice?.value
  if (!diceResult || diceResult < 1 || diceResult > 6) {
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ—Å–∫–µ –∫—É–±–∏–∫–∞')
    return
  }

  // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  await new Promise((resolve) => setTimeout(resolve, 2000))

  let winAmount = 0
  let resultMessage = ''

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  switch (diceResult) {
    case 1:
      winAmount = 1
      resultMessage = '–í—ã–ø–∞–ª–∞ 1Ô∏è‚É£ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 1‚≠êÔ∏è'
      break
    case 2:
      winAmount = 2
      resultMessage = '–í—ã–ø–∞–ª–∞ 2Ô∏è‚É£ - –ø–æ–ª—É—á–∞–µ—Ç–µ 2‚≠êÔ∏è'
      break
    case 3:
      winAmount = 3
      resultMessage = '–í—ã–ø–∞–ª–∞ 3Ô∏è‚É£ - –ø–æ–ª—É—á–∞–µ—Ç–µ 3‚≠êÔ∏è'
      break
    case 4:
      winAmount = 4
      resultMessage = '–í—ã–ø–∞–ª–∞ 4Ô∏è‚É£ - –ø–æ–ª—É—á–∞–µ—Ç–µ 4‚≠êÔ∏è'
      break
    case 5:
      winAmount = BET_AMOUNT // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–≤–∫—É
      resultMessage = '–í—ã–ø–∞–ª–∞ 5Ô∏è‚É£ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—à—É —Å—Ç–∞–≤–∫—É 5‚≠êÔ∏è'
      break
    case 6:
      winAmount = BET_AMOUNT * 2 // –î–≤–æ–π–Ω–æ–π –≤—ã–∏–≥—Ä—ã—à
      resultMessage = 'üéâ –í—ã–ø–∞–ª–∞ 6Ô∏è‚É£ - –í–´–ò–ì–†–´–® 10‚≠êÔ∏è! üéâ'
      break
  }

  // –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
  const finalBalance = await updateBalanceByUserId(userId, winAmount)
  if (finalBalance === null) {
    await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –≤—ã–∏–≥—Ä—ã—à–∞')
    return
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
  const message = `üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞:
<blockquote>${resultMessage}</blockquote>
<blockquote>–í–∞—à –±–∞–ª–∞–Ω—Å: ${finalBalance}‚≠êÔ∏è</blockquote>`

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
  await ctx.replyWithPhoto(IMAGES.CUBEGAME, {
    caption: message,
    reply_markup: new InlineKeyboard()
      .text('–°—ã–≥—Ä–∞—Ç—å –µ—â—ë (5‚≠êÔ∏è)', 'playCube')
      .text('–ù–∞–∑–∞–¥ üì≤', 'main_menu'),
  })
}
