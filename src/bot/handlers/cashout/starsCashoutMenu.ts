import { Context, InlineKeyboard } from 'grammy'
import { fetchUser, updateState } from '../../../db/methods'

import { IMAGES } from '../../../../CONFIG.json'

export default async (ctx: Context) => {
  const keyboard = new InlineKeyboard()

  const user = await fetchUser({ id: ctx.from!.id })

  if (!user?.cashout_request) {
    const starValues = [50, 100, 250, 500, 1000, 2500, 10000, 50000]

    starValues.forEach((value, index) => {
      if (index % 2 === 0) keyboard.row()
      keyboard.text(`${value} ‚≠êÔ∏è`, `starsCashout-${value}`)
    })

    keyboard.row().text('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'main_menu')

    await ctx.replyWithPhoto(IMAGES.TOPUP, {
      caption: `‚≠êÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –∑–≤—ë–∑–¥ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏
<pre><code class='language-üî• –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É'>${user?.balance.toFixed(
        2
      )} ‚≠êÔ∏è</code></pre>`,

      reply_markup: keyboard,
    })
  } else {
    await ctx.replyWithPhoto(IMAGES.TOPUP, {
      caption: `–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥:
<pre><code class="language-–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ">‚≠êÔ∏è${user.cashout_request.amount}</code></pre>
<pre><code class="language-–î–∞—Ç–∞">üïí${user.cashout_request.date}</code></pre>

–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
`,

      reply_markup: keyboard,
    })
  }
}
