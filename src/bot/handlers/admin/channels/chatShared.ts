import { Context } from 'grammy'
import {
  getOpChannel,
  fetchUser,
  addOpChannel,
} from '../../../../db/methods'
import adminMenu from '../adminMenu'

export default async (ctx: Context) => {
  const { id } = ctx.from!
  const userExisted = await fetchUser({
    id: id,
  })

  const chat_id = ctx.message?.chat_shared?.chat_id!

  try {
    const chatData = await ctx.api.getChat(chat_id)

    const opChannel = await getOpChannel(chat_id)
    if (opChannel) {
      await ctx.reply('–ö–∞–Ω–∞–ª —É–∂–µ –µ—Å—Ç—å!')
    } else {
      chatData.username || chatData.invite_link
        ? addOpChannel(chat_id)
        : console.log('–ù–µ —É–¥–∞–ª–æ—Å—å')

      await ctx.reply(`
${
  chatData.type === 'channel'
    ? '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã'
    : '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞'
} <b>¬´${chatData.title}¬ª</b> –Ω–∞ –û–ü ${
        chatData.username ? `\n@${chatData.username}` : ''
      }
<pre><code class="language-üÜî –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞">${chat_id}</code></pre>
${chatData.username ? `@${chatData.username}` : 'üîë –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª'}
${
  !chatData.username && !chatData.invite_link
    ? `<blockquote><b>‚ö†Ô∏è –ë–û–¢ –ù–ï –ú–û–ñ–ï–¢ –ü–†–ò–ì–õ–ê–®–ê–¢–¨ –õ–Æ–î–ï–ô. 
–í–´–î–ê–ô–¢–ï –ü–†–ê–í–ê –í –ö–ê–ù–ê–õ–ï –ò –ü–û–ü–†–û–ë–£–ô–¢–ï –°–ù–û–í–ê</b></blockquote>`
    : '<blockquote>ü§ñ –£ –±–æ—Ç–∞ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ ‚úÖ</blockquote>'
}
${
  chatData.username || chatData.invite_link
    ? '‚úÖ –ö–ê–ù–ê–õ –î–û–ë–ê–í–õ–ï–ù'
    : '‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –î–û–ë–ê–í–ò–¢–¨ –ö–ê–ù–ê–õ'
}`)
    }
  } catch {
    await ctx.reply(
      '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É/—á–∞—Ç—É. –ë–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç —Ç–∞–º'
    )
  }
  if (userExisted?.is_admin) {
    await adminMenu(ctx)
  }
}
